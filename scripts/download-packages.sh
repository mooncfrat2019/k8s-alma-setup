#!/bin/bash
set -e

# Configuration
DOWNLOAD_DIR="./files/packages"
PACKAGE_LIST_FILE="./scripts/package-list.txt"
mkdir -p $DOWNLOAD_DIR

echo "=== Downloading Kubernetes and Dependency Packages ==="

# –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
PACKAGES=(
    # System dependencies
    "curl"
    "wget"
    "gnupg2"
    "software-properties-common"
    "apt-transport-https"
    "ca-certificates"
    "bridge-utils"
    "ntp"
    "ntpdate"

    # Container runtime
    "containerd.io"

    # HAProxy
    "haproxy"

    # Web server for local repo
    "nginx"

    # Docker for registry
    "docker.io"
    "docker-compose"
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–∫–µ—Ç–∞ –∏ –µ–≥–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
download_package_with_deps() {
    local package=$1
    echo "üì¶ Downloading package: $package"

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    local temp_dir=$(mktemp -d)
    cd $temp_dir

    # –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å –ø–∞–∫–µ—Ç –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if apt-get download $(apt-cache depends --recurse --no-recommends --no-suggests \
        --no-conflicts --no-breaks --no-replaces --no-enhances \
        $package 2>/dev/null | grep "^\w" | sort -u) 2>/dev/null; then

        # –ö–æ–ø–∏—Ä—É–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –≤ —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        cp *.deb $DOWNLOAD_DIR/ 2>/dev/null || true
        echo "‚úÖ Downloaded: $package"
    else
        echo "‚ö†Ô∏è  Skipping $package due to download error"
        # –ü—Ä–æ–±—É–µ–º —Å–∫–∞—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞–∫–µ—Ç
        if apt-get download $package 2>/dev/null; then
            cp *.deb $DOWNLOAD_DIR/ 2>/dev/null || true
            echo "‚úÖ Downloaded (main only): $package"
        fi
    fi

    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    cd -
    rm -rf $temp_dir
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Kubernetes –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Google
download_kubernetes_packages() {
    echo "üì• Setting up Kubernetes repository and downloading packages..."

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Kubernetes
    echo "üîß Adding Kubernetes repository..."

    # –°–∫–∞—á–∏–≤–∞–µ–º GPG –∫–ª—é—á
    curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤
    sudo apt-get update

    # –°–∫–∞—á–∏–≤–∞–µ–º Kubernetes –ø–∞–∫–µ—Ç—ã
    K8S_PACKAGES=("kubelet" "kubeadm" "kubectl" "kubernetes-cni")

    for pkg in "${K8S_PACKAGES[@]}"; do
        echo "üì¶ Downloading: $pkg"
        download_package_with_deps "$pkg"
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–∞–∫–µ—Ç–æ–≤ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (fallback)
download_packages_direct() {
    echo "üîÑ Trying direct package download..."

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤
    sudo apt-get update

    # –°–∫–∞—á–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–π –ø–∞–∫–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ
    ALL_PACKAGES=(
        "curl" "wget" "gnupg2" "software-properties-common" "apt-transport-https"
        "ca-certificates" "bridge-utils" "ntp" "ntpdate" "containerd" "haproxy"
        "nginx" "docker.io" "docker-compose" "kubelet" "kubeadm" "kubectl" "kubernetes-cni"
    )

    for package in "${ALL_PACKAGES[@]}"; do
        echo "üì¶ Attempting to download: $package"
        if apt-get download "$package" 2>/dev/null; then
            cp *.deb $DOWNLOAD_DIR/ 2>/dev/null || true
            echo "‚úÖ Downloaded: $package"
        else
            echo "‚ö†Ô∏è  Failed to download: $package"
        fi
    done
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
echo "üîÑ Updating package lists..."
sudo apt-get update || true

# –ü—Ä–æ–±—É–µ–º —Å–∫–∞—á–∞—Ç—å Kubernetes –ø–∞–∫–µ—Ç—ã —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if download_kubernetes_packages; then
    echo "‚úÖ Kubernetes packages downloaded via official repo"
else
    echo "‚ùå Failed to download Kubernetes via official repo, trying fallback..."
    download_packages_direct
fi

# –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
for package in "${PACKAGES[@]}"; do
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —É–∂–µ —Å–∫–∞—á–∞–ª–∏ —Å Kubernetes
    if [[ " kubelet kubeadm kubectl kubernetes-cni " != *" $package "* ]]; then
        download_package_with_deps "$package"
    fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∫–∞—á–∞–ª–∏ containerd
if ! ls $DOWNLOAD_DIR/*containerd* > /dev/null 2>&1; then
    echo "‚ö†Ô∏è  containerd not found, trying to download separately..."
    download_package_with_deps "containerd"
fi

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –ø–∞–∫–µ—Ç–æ–≤
echo "üìù Generating package list..."
ls -la $DOWNLOAD_DIR/*.deb 2>/dev/null > $PACKAGE_LIST_FILE || {
    echo "No packages downloaded" > $PACKAGE_LIST_FILE
    echo "‚ùå No packages were downloaded!"
    exit 1
}

# –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo "üèóÔ∏è Creating local repository index..."
cd $DOWNLOAD_DIR
if ls *.deb > /dev/null 2>&1; then
    dpkg-scanpackages . /dev/null 2>/dev/null | gzip -9c > Packages.gz || echo "‚ö†Ô∏è  Could not create Packages.gz"
    echo "‚úÖ Repository index created"
else
    echo "‚ùå No packages to index"
    exit 1
fi
cd -

echo ""
echo "üéâ Package download completed!"
echo "üìÅ Packages saved to: $DOWNLOAD_DIR"
echo "üìä Total packages downloaded: $(ls -1 $DOWNLOAD_DIR/*.deb 2>/dev/null | wc -l || echo 0)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞–∫–µ—Ç—ã
echo ""
echo "üîç Critical package check:"
CRITICAL_PACKAGES=("kubelet" "kubeadm" "kubectl" "containerd")
MISSING_COUNT=0

for pkg in "${CRITICAL_PACKAGES[@]}"; do
    if ls $DOWNLOAD_DIR/*${pkg}* > /dev/null 2>&1; then
        echo "‚úÖ $pkg - FOUND"
    else
        echo "‚ùå $pkg - MISSING"
        MISSING_COUNT=$((MISSING_COUNT + 1))
    fi
done

if [ $MISSING_COUNT -gt 0 ]; then
    echo ""
    echo "‚ùå Missing $MISSING_COUNT critical packages!"
    echo "Please check your internet connection and repository configuration."
    exit 1
else
    echo ""
    echo "‚úÖ All critical packages downloaded successfully!"
fi