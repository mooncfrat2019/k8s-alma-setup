#!/bin/bash
set -e

echo "=== Loading and pushing Docker images to local registry ==="

REGISTRY="{{ registry_url }}"
IMAGES_DIR="{{ k8s_home }}/k8s-offline/files/images"

# Check if images directory exists
if [ ! -d "$IMAGES_DIR" ]; then
    echo "❌ Error: Images directory not found: $IMAGES_DIR"
    exit 1
fi

echo "📁 Loading images from: $IMAGES_DIR"

# Load and push each image
for image_tar in "$IMAGES_DIR"/*.tar; do
    if [ -f "$image_tar" ]; then
        echo "📦 Processing: $(basename "$image_tar")"

        # Load image from tar
        docker load -i "$image_tar"

        # Get image ID and tags
        image_id=$(tar -xf "$image_tar" manifest.json -O | python3 -c "import json,sys; print(json.load(sys.stdin)[0]['Config'].split('.')[0])" 2>/dev/null || echo "")

        if [ -n "$image_id" ]; then
            # Get all tags for this image
            tags=$(docker images --no-trunc --format "{{ '{{.Repository}}:{{.Tag}}' }}" | grep "$image_id" | head -1)

            for original_tag in $tags; do
                if [ -n "$original_tag" ] && [ "$original_tag" != "<none>:<none>" ]; then
                    echo "🏷️  Original tag: $original_tag"

                    # Extract image name without registry prefix
                    image_name_with_tag=$(echo "$original_tag" | sed 's|^.*/||')
                    if [ -z "$image_name_with_tag" ]; then
                        image_name_with_tag="$original_tag"
                    fi

                    # Create new tag for local registry
                    new_tag="$REGISTRY/$image_name_with_tag"

                    echo "🚀 Tagging: $original_tag -> $new_tag"
                    docker tag "$original_tag" "$new_tag"

                    echo "📤 Pushing: $new_tag"
                    docker push "$new_tag"

                    echo "✅ Success: $new_tag"
                else
                    echo "⚠️  No valid tags found for image"
                    # Try to tag by image ID
                    new_tag="$REGISTRY/unknown-$(basename "$image_tar" .tar)"
                    echo "🚀 Tagging by ID: $image_id -> $new_tag"
                    docker tag "$image_id" "$new_tag"
                    docker push "$new_tag"
                    echo "✅ Success: $new_tag"
                fi
            done
        else
            echo "❌ Could not extract image info from: $(basename "$image_tar")"
        fi
    fi
done

echo ""
echo "🎉 Image loading and pushing completed!"
echo "📋 Checking registry catalog..."

# Display catalog
curl -s -X GET "http://$REGISTRY/v2/_catalog" | python3 -m json.tool 2>/dev/null || curl -s -X GET "http://$REGISTRY/v2/_catalog"