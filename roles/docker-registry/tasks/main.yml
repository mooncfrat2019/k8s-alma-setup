---
- name: Запуск и включение Docker
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Настройка незащищенного registry в Docker
  copy:
    content: |
      {
        "insecure-registries": ["{{ registry_url }}"]
      }
    dest: /etc/docker/daemon.json
    mode: 0644

- name: Перезагрузка Docker
  systemd:
    name: docker
    state: restarted

- name: Создание директории для registry
  file:
    path: /opt/docker-registry
    state: directory
    mode: 0755

- name: Создание директории для данных registry
  file:
    path: /opt/docker-registry/data
    state: directory
    mode: 0755

- name: Настройка Docker registry конфигурации
  template:
    src: registry-config.yml.j2
    dest: /opt/docker-registry/docker-compose.yml
    mode: 0644

- name: Остановка существующего registry контейнера
  shell: |
    cd /opt/docker-registry
    docker-compose down || true
    docker rm -f registry || true
  args:
    executable: /bin/bash
  ignore_errors: yes

- name: Запуск Docker registry через docker-compose
  shell: |
    cd /opt/docker-registry
    docker-compose up -d
  args:
    executable: /bin/bash
  register: compose_result
  failed_when: compose_result.rc != 0

- name: Ожидание запуска registry
  wait_for:
    host: "{{ registry_host }}"
    port: "{{ registry_port }}"
    delay: 5
    timeout: 30

- name: Проверка что registry работает
  shell: |
    curl -s http://{{ registry_url }}/v2/_catalog
  register: registry_check
  changed_when: false

- name: Показать статус registry
  debug:
    msg: "Registry status: {{ registry_check.stdout }}"

- name: Проверка загруженных образов в Docker
  shell: |
    docker images
  register: docker_images
  changed_when: false

- name: Показать образы в Docker
  debug:
    msg: "Images in Docker: {{ docker_images.stdout }}"

- name: Создание скрипта для загрузки образов через шаблон
  template:
    src: push-images.sh.j2
    dest: /opt/docker-registry/push-images.sh
    mode: 0755

- name: Загрузка образов в локальный registry
  shell: |
    cd /opt/docker-registry
    ./push-images.sh
  args:
    executable: /bin/bash
  register: push_result
  ignore_errors: yes

- name: Показать результат загрузки
  debug:
    msg: "Push script output: {{ push_result.stdout }}"

- name: Проверка загруженных образов в registry
  shell: |
    curl -s http://{{ registry_url }}/v2/_catalog
  register: registry_catalog
  changed_when: false

- name: Показать финальный результат
  debug:
    msg: "Final registry catalog: {{ registry_catalog.stdout }}"